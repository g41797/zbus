Zig Playground
    https://playground.zigtools.org/

The ubus mechanism of openwrt
    https://www.codetd.com/en/article/13008294

Everything Ubus
    https://www.snaums.de/informatik/everything-ubus.html

OpenWrt UBUS
    https://hackmd.io/@rYMqzC-9Rxy0Isn3zClURg/H1BY98bRw

Examples client-server
    https://github.com/txomon/ubus/tree/master/examples

Ubus baapi back-end
    https://gitlab.com/prpl-foundation/components/ambiorix/modules/amxb_backends/amxb_ubus
    [socat https://openwrt.org/packages/pkgdata/socat

[OpenWrt] uses Ubus to implement process communication
    https://topic.alibabacloud.com/a/openwrt-uses-ubus-to-implement-process-communication_8_8_20271300.html

How to use UBUS commands for Bluetooth device scanning / pairing
    https://wiki.teltonika-networks.com/index.php?title=How_to_use_UBUS_commands_for_Bluetooth_device_scanning_/_pairing&mobileaction=toggle_view_desktop

Repos
    https://github.com/openwrt/libubox

    git submodule add https://github.com/openwrt/libubox src/libs/libubox

    https://github.com/openwrt/ubus
    git submodule add https://github.com/openwrt/ubus src/libs/ubus

    https://github.com/openwrt/netifd
    git submodule add https://github.com/openwrt/netifd src/libs/netifd

    https://github.com/openwrt/ustp
    git submodule add https://github.com/openwrt/ustp src/libs/ustp

    https://github.com/openwrt/rpcd
    git submodule add https://github.com/openwrt/rpcd src/libs/rpcd

    https://github.com/openwrt/procd
    git submodule add https://github.com/openwrt/procd src/libs/procd

    git rm src/libs/TBD

Install json-c
    sudo dnf install json-c-devel
    Install dir: /usr/include/json-c
    mkdir src/c/include
    ln -s /usr/include/json-c src/c/include/json

Zig & JSON
    https://www.openmymind.net/Reading-A-Json-Config-In-Zig/
    https://www.reddit.com/r/Zig/comments/1e1pqrg/is_it_possible_to_parse_a_json_object_to_a_map/
    https://www.reddit.com/r/Zig/comments/1bignpf/json_serialization_and_taggeddiscrimated_unions/
    https://zigbin.io/651078
    https://www.openmymind.net/Zigs-std-json-Parsed/

Translate-C
    https://zig.guide/master/working-with-c/translate-c
    https://fig.io/manual/zig/translate-c

Incrementally porting an embedded C application to Zig
    https://www.lagerdata.com/articles/incrementally-porting-an-embedded-c-application-to-zig
    https://github.com/lagerdata/demo-nrf52-periphs/

libubus: use network order in ubus message header fields
    https://patchwork.ozlabs.org/project/openwrt/patch/1455481436-551-1-git-send-email-eyal.birger@gmail.com/

Examples of servers
    https://dev.iopsys.eu/bbf/bbfdm/-/blob/docs/docs/guide/obj_param_extension.md#ubus-command
    https://dev.iopsys.eu/bbf/uspd/-/tree/devel/schemas/ubus
    https://dev.iopsys.eu/bbf/bbfdm/-/blob/docs/docs/guide/obj_param_extension.md
    https://dev.iopsys.eu/bbf
    uspd - https://dev.iopsys.eu/bbf/uspd


D-Bus API Design Guidelines
    https://dbus.freedesktop.org/doc/dbus-api-design.html

Code Generation in Zig
    https://steveroche.xyz/posts/code-generation-in-zig/

Convert JSON to code
    https://quicktype.io/

Handling real-world JSON documents with Zig v0.11
    https://log.pocka.io/en/Blog/2024/zig-v0.11-json-handling/

JSON Hash Map
    https://github.com/ziglang/zig/blob/master/lib/std/json/hashmap.zig

JSON schema to Zig
    https://github.com/travisstaloch/json-schema-gen
    https://github.com/aerth/json-to-zig

Data format of UBUS - JSON ?????
    https://www.reddit.com/r/openwrt/comments/1g5jvuf/data_format_of_ubus_json/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button
    https://forum.openwrt.org/t/data-format-of-ubus-json/213208/4?u=g41797
    
Writing a struct deserializer
    https://nathancraddock.com/blog/deserialization-with-zig-metaprogramming/

Reading/writing strings from binary data
    https://ziggit.dev/t/reading-writing-strings-from-binary-data/1159/6?u=g41797

Difference between struct level align(x) and field level align(x)
    https://ziggit.dev/t/difference-between-struct-level-align-x-and-field-level-align-x/3082/1


Packed structs in Zig make bit/flag sets trivial
    https://devlog.hexops.com/2022/packed-structs-in-zig/

Pointer arithmetic
    https://github.com/andrewCodeDev/random_access

UBUS code routines and analysis
    https://www.programmersought.com/article/54945388753/

Metaprogramming
    https://www.openmymind.net/Basic-MetaProgramming-in-Zig/
    https://ikrima.dev/dev-notes/zig/zig-metaprogramming/
    https://medium.com/@edlyuu/zig-comptime-wtf-is-zig-comptime-and-inline-e6ea40e0cb41
    https://kristoff.it/blog/what-is-zig-comptime/

Badges
    https://henriquesebastiao.com/badges/
    https://github.com/henriquesebastiao/badges

Generate docs
    cd ./dgen
    /home/g41797/Devs/doxygen-1.12.0/bin/doxygen

Advanced Guide to Return Values and Error Unions in Zig
    https://gencmurat.com/en/posts/advanced-guide-to-return-values-and-error-unions-in-zig/

Tagged union
    https://saidvandeklundert.net/fortheloveofzig/tagged%20unions

Comparing Two High-Performance I/O Design Patterns
    https://www.artima.com/articles/comparing-two-high-performance-io-design-patterns

Reactor - Proactor
    http://didawiki.cli.di.unipi.it/lib/exe/fetch.php/magistraleinformatica/tdp/tpd_reactor_proactor.pdf
    https://www.dre.vanderbilt.edu/~schmidt/PDF/Proactor.pdf

A Programmer-Friendly I/O Abstraction Over io_uring and kqueue
    https://tigerbeetle.com/blog/a-friendly-abstraction-over-iouring-and-kqueue

Cross-platform event loop
    https://github.com/mitchellh/libxev

What is io_uring?
    https://unixism.net/loti/what_is_io_uring.html
    https://github.com/saltzm/async_io_uring
    https://github.com/Cloudef/zig-aio
    https://developers.redhat.com/articles/2023/04/12/why-you-should-use-iouring-network-io

Zig | 53, usingnamespace
    https://medium.com/@mikecode/zig-53-usingnamespace-2eac1ba3aef5

OpenWrt programs (ubus, uhttpd) ported to Ubuntu
    https://launchpad.net/~stokito/+archive/ubuntu/openwrt

Install ppa-dev-tools on Fedora
    https://snapcraft.io/install/ppa-dev-tools/fedorahttps://snapcraft.io/install/ppa-dev-tools/fedora

Using the SDK
    https://openwrt.org/docs/guide-developer/toolchain/using_the_sdk

Length of zero terminated string
    const c_string: [*:0]const u8 = "hello";
    const length = std.mem.len(c_string);
    std.debug.print("length {d} sentinel {d} \n", .{length, c_string[length]});

    Output: length 5 sentinel 0

tips for interacting with c
    https://zig.news/liyu1981/tips-for-interacting-with-c-1oo8

Beginner's notes on Slices/Arrays/Strings
    https://zig.news/david_vanderson/beginner-s-notes-on-slices-arrays-strings-5b67

Zig Metaprogramming
    https://ikrima.dev/dev-notes/zig/zig-metaprogramming/#zig-metaprogramming
